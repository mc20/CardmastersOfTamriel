using NiflySharp;
using NiflySharp.Blocks;
using CardmastersOfTamriel.Models;
using Serilog;

namespace CardmastersOfTamriel.SynthesisPatcher.Data;

class NifHandler
{
    public static void DuplicateAndModifyNif(Card card)
    {
        var templateNifPath = @"D:\Modding\Skyrim\Instances\Skyrim 2024-05\mods\CardmastersOfTamriel\Meshes\CardmastersOfTamriel\CardBasic.nif";

        var nifFile = new NifFile();
        nifFile.Load(templateNifPath);

        foreach (var block in nifFile.Blocks)
        {
            if (block is BSShaderTextureSet lightingShader)
            {
                lightingShader.Textures ??= [];
                lightingShader.Textures.Clear();

                lightingShader.Textures.Add(new NiString4(@$"textures\cardmastersoftamriel\{card.Tier}\{card.ImageFileName}"));
                lightingShader.Textures.Add(new NiString4(@"textures\cardmastersoftamriel\card_n.dds"));
            }
        }

        var outputPath = @$"D:\Modding\Skyrim\Instances\Skyrim 2024-05\mods\CardmastersOfTamriel\Meshes\CardmastersOfTamriel\{card.Tier}\{Path.GetFileNameWithoutExtension(card.ImageFileName)}.nif";

        // Save the modified .nif as a new file
        nifFile.Save(outputPath);
        Log.Information($"Saved new nif file for Card: {card.Id} at texture: {outputPath}");
    }
}